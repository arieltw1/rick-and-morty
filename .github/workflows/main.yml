name: CI
on:
  push:
    branches:
      - main
jobs:
  job1:
    name: Microk8s Cluster interaction
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: balchua/microk8s-actions@v0.2.1
        with:
          channel: '1.19/stable'
          addons: '["dns", "ingress"]'
      - name: Test MicroK8s
        run: |
          kubectl get no
          kubectl get pods -A -o wide
      - name: Generate CSV
        run: python3 code/gen_csv.py
      # This is the a separate action that sets up buildx runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # And make it available for the builds
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: exercise:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Deploy 
        run: |
          kubectl create namespace rick-and-morty
          kubectl apply -f yamls/
      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash
      - name: check ingress
        run: |
          kubectl get ingress -n rick-and-morty
      - name: check ingress controller
        run: |
          kubectl get pods -A | grep nginx-ingress-microk8s-controller | awk '{print "kubectl logs -n " $1 " " $2}' | sh
      - name: Test service URLs
        run: |
          curl -k http://127.0.0.1/   
